{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/StephenReiser/Desktop/SteveProject/dfs-results/components/CsvUpload.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { CSVReader } from 'react-papaparse';\n\nvar CSVComp =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CSVComp, _Component);\n\n  function CSVComp(props) {\n    var _this;\n\n    _classCallCheck(this, CSVComp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CSVComp).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleReadCSV\", function (data) {\n      console.log(data);\n\n      _this.props.setMyData(convertToObject(data));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOnError\", function (err, file, inputElem, reason) {\n      console.log(err);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleImportOffer\", function () {\n      _this.fileInput.current.click();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"convertToObject\", function (anArray) {\n      var data = anArray,\n          keys = data.data[0],\n          result = data.data.slice(2).map(function (a) {\n        var temp = {};\n        keys.forEach(function (k, i) {\n          temp[k] = a[i];\n        });\n        return temp;\n      });\n      return result;\n    });\n\n    _this.fileInput = React.createRef();\n    return _this;\n  }\n\n  _createClass(CSVComp, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(CSVReader, {\n        onFileLoaded: this.handleReadCSV,\n        inputRef: this.fileInput,\n        style: {\n          display: 'none'\n        },\n        onError: this.handleOnError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        onClick: this.handleImportOffer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Import\"));\n    }\n  }]);\n\n  return CSVComp;\n}(Component);\n\nexport default CSVComp;","map":{"version":3,"sources":["/Users/StephenReiser/Desktop/SteveProject/dfs-results/components/CsvUpload.js"],"names":["React","Component","CSVReader","CSVComp","props","data","console","log","setMyData","convertToObject","err","file","inputElem","reason","fileInput","current","click","anArray","keys","result","slice","map","a","temp","forEach","k","i","createRef","handleReadCSV","display","handleOnError","handleImportOffer"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,SAAT,QAA0B,iBAA1B;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;;AADiB,oEAKH,UAACC,IAAD,EAAU;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAKD,KAAL,CAAWI,SAAX,CAAqBC,eAAe,CAACJ,IAAD,CAApC;AAGD,KAVkB;;AAAA,oEAYH,UAACK,GAAD,EAAMC,IAAN,EAAYC,SAAZ,EAAuBC,MAAvB,EAAkC;AAChDP,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KAdkB;;AAAA,wEAgBC,YAAM;AACxB,YAAKI,SAAL,CAAeC,OAAf,CAAuBC,KAAvB;AACD,KAlBkB;;AAAA,sEAoBD,UAACC,OAAD,EAAa;AAC7B,UAAIZ,IAAI,GAAGY,OAAX;AAAA,UACAC,IAAI,GAAGb,IAAI,CAACA,IAAL,CAAU,CAAV,CADP;AAAA,UAEAc,MAAM,GAAGd,IAAI,CAACA,IAAL,CAAUe,KAAV,CAAgB,CAAhB,EAAmBC,GAAnB,CAAuB,UAAUC,CAAV,EAAa;AACzC,YAAIC,IAAI,GAAG,EAAX;AACAL,QAAAA,IAAI,CAACM,OAAL,CAAa,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACzBH,UAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUH,CAAC,CAACI,CAAD,CAAX;AACH,SAFD;AAGA,eAAOH,IAAP;AACH,OANQ,CAFT;AAUA,aAAOJ,MAAP;AAEH,KAjCoB;;AAEjB,UAAKL,SAAL,GAAiBd,KAAK,CAAC2B,SAAN,EAAjB;AAFiB;AAGlB;;;;6BAgCQ;AACP,aACE,4BACE,MAAC,SAAD;AACE,QAAA,YAAY,EAAE,KAAKC,aADrB;AAEE,QAAA,QAAQ,EAAE,KAAKd,SAFjB;AAGE,QAAA,KAAK,EAAE;AAACe,UAAAA,OAAO,EAAE;AAAV,SAHT;AAIE,QAAA,OAAO,EAAE,KAAKC,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAQ,QAAA,OAAO,EAAE,KAAKC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CADF;AAWD;;;;EAhDmB9B,S;;AAmDtB,eAAeE,OAAf","sourcesContent":["import React, { Component } from 'react'\n \nimport { CSVReader } from 'react-papaparse'\n \nclass CSVComp extends Component {\n  constructor(props) {\n    super(props)\n    this.fileInput = React.createRef()\n  }\n \n  handleReadCSV = (data) => {\n    console.log(data)\n    this.props.setMyData(convertToObject(data))\n    \n    \n  }\n \n  handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n \n  handleImportOffer = () => {\n    this.fileInput.current.click()\n  }\n\n  convertToObject = (anArray) => {\n    var data = anArray,\n    keys = data.data[0],\n    result = data.data.slice(2).map(function (a) {\n        var temp = {};\n        keys.forEach(function (k, i) {\n            temp[k] = a[i];\n        })\n        return temp;\n    });\n    \n    return result\n\n};\n \n  render() {\n    return (\n      <>\n        <CSVReader\n          onFileLoaded={this.handleReadCSV}\n          inputRef={this.fileInput}\n          style={{display: 'none'}}\n          onError={this.handleOnError}\n        />\n        <button onClick={this.handleImportOffer}>Import</button>\n      </>\n    )\n  }\n}\n \nexport default CSVComp"]},"metadata":{},"sourceType":"module"}