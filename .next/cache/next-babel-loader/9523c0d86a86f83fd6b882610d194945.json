{"ast":null,"code":"var _jsxFileName = \"/Users/StephenReiser/Desktop/SteveProject/dfs-results/components/NewTable.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return {\n    name,\n    calories,\n    fat,\n    carbs,\n    protein\n  };\n}\n\nconst rows = [createData('Cupcake', 305, 3.7, 67, 4.3), createData('Donut', 452, 25.0, 51, 4.9), createData('Eclair', 262, 16.0, 24, 6.0), createData('Frozen yoghurt', 159, 6.0, 24, 4.0), createData('Gingerbread', 356, 16.0, 49, 3.9), createData('Honeycomb', 408, 3.2, 87, 6.5), createData('Ice cream sandwich', 237, 9.0, 37, 4.3), createData('Jelly Bean', 375, 0.0, 94, 0.0), createData('KitKat', 518, 26.0, 65, 7.0), createData('Lollipop', 392, 0.2, 98, 0.0), createData('Marshmallow', 318, 0, 81, 2.0), createData('Nougat', 360, 19.0, 9, 37.0), createData('Oreo', 437, 18.0, 63, 4.0)];\nconst headCells = [{\n  id: 'Sport',\n  numeric: false,\n  disablePadding: true,\n  label: 'Sport'\n}, {\n  id: 'Game_Type',\n  numeric: false,\n  disablePadding: false,\n  label: 'Game_Type'\n}, {\n  id: 'Entry_Key',\n  numeric: true,\n  disablePadding: false,\n  label: 'Entry_Key'\n}, {\n  id: 'Entry',\n  numeric: false,\n  disablePadding: false,\n  label: 'Entry'\n}, {\n  id: 'Contest_Key',\n  numeric: false,\n  disablePadding: false,\n  label: 'Contest_Key'\n}, {\n  id: 'Contest_Date_EST',\n  numeric: false,\n  disablePadding: false,\n  label: 'Contest_Date_EST'\n}, {\n  id: 'Place',\n  numeric: true,\n  disablePadding: false,\n  label: 'Place'\n}, {\n  id: 'Points',\n  numeric: true,\n  disablePadding: false,\n  label: 'Points'\n}, {\n  id: 'Winnings_Non_Ticket',\n  numeric: true,\n  disablePadding: false,\n  label: 'Winnings_Non_Ticket'\n}, {\n  id: 'Winnings_Ticket',\n  numeric: true,\n  disablePadding: false,\n  label: 'Winnings_Ticket'\n}, {\n  id: 'Contest_Entries',\n  numeric: true,\n  disablePadding: false,\n  label: 'Contest_Entries'\n}, {\n  id: 'Entry_Fee',\n  numeric: true,\n  disablePadding: false,\n  label: 'Entry_Fee'\n}, {\n  id: 'Prize_Pool',\n  numeric: true,\n  disablePadding: false,\n  label: 'Prize_Pool'\n}, {\n  id: 'Places_Paid',\n  numeric: true,\n  disablePadding: false,\n  label: 'Places_Paid'\n}];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc' ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return __jsx(TableHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    padding: \"checkbox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(Checkbox, {\n    indeterminate: numSelected > 0 && numSelected < rowCount,\n    checked: rowCount > 0 && numSelected === rowCount,\n    onChange: onSelectAllClick,\n    inputProps: {\n      'aria-label': 'select all desserts'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })), headCells.map(headCell => __jsx(TableCell, {\n    key: headCell.id,\n    align: headCell.numeric ? 'right' : 'left',\n    padding: headCell.disablePadding ? 'none' : 'default',\n    sortDirection: orderBy === headCell.id ? order : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(TableSortLabel, {\n    active: orderBy === headCell.id,\n    direction: orderBy === headCell.id ? order : 'asc',\n    onClick: createSortHandler(headCell.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, headCell.label, orderBy === headCell.id ? __jsx(\"span\", {\n    className: classes.visuallyHidden,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, order === 'desc' ? 'sorted descending' : 'sorted ascending') : null)))));\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight: theme.palette.type === 'light' ? {\n    color: theme.palette.secondary.main,\n    backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n  } : {\n    color: theme.palette.text.primary,\n    backgroundColor: theme.palette.secondary.dark\n  },\n  title: {\n    flex: '1 1 100%'\n  }\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const {\n    numSelected\n  } = props;\n  return __jsx(Toolbar, {\n    className: clsx(classes.root, {\n      [classes.highlight]: numSelected > 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, numSelected > 0 ? __jsx(Typography, {\n    className: classes.title,\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, numSelected, \" selected\") : __jsx(Typography, {\n    className: classes.title,\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, \"Nutrition\"), numSelected > 0 ? __jsx(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    \"aria-label\": \"delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203\n    },\n    __self: this\n  }, __jsx(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }))) : __jsx(Tooltip, {\n    title: \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    \"aria-label\": \"filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, __jsx(FilterListIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1\n  }\n}));\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n  return __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }, __jsx(Paper, {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309\n    },\n    __self: this\n  }, __jsx(EnhancedTableToolbar, {\n    numSelected: selected.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    },\n    __self: this\n  }), __jsx(TableContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-labelledby\": \"tableTitle\",\n    size: dense ? 'small' : 'medium',\n    \"aria-label\": \"enhanced table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    },\n    __self: this\n  }, __jsx(EnhancedTableHead, {\n    classes: classes,\n    numSelected: selected.length,\n    order: order,\n    orderBy: orderBy,\n    onSelectAllClick: handleSelectAllClick,\n    onRequestSort: handleRequestSort,\n    rowCount: rows.length,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318\n    },\n    __self: this\n  }), __jsx(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327\n    },\n    __self: this\n  }, stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\n    const isItemSelected = isSelected(row.name);\n    const labelId = `enhanced-table-checkbox-${index}`;\n    return __jsx(TableRow, {\n      hover: true,\n      onClick: event => handleClick(event, row.name),\n      role: \"checkbox\",\n      \"aria-checked\": isItemSelected,\n      tabIndex: -1,\n      key: row.name,\n      selected: isItemSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, __jsx(TableCell, {\n      padding: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, __jsx(Checkbox, {\n      checked: isItemSelected,\n      inputProps: {\n        'aria-labelledby': labelId\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    })), __jsx(TableCell, {\n      component: \"th\",\n      id: labelId,\n      scope: \"row\",\n      padding: \"none\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, row.name), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, row.calories), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, row.fat), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, row.carbs), __jsx(TableCell, {\n      align: \"right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, row.protein));\n  }), emptyRows > 0 && __jsx(TableRow, {\n    style: {\n      height: (dense ? 33 : 53) * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    },\n    __self: this\n  }, __jsx(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362\n    },\n    __self: this\n  }))))), __jsx(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368\n    },\n    __self: this\n  })), __jsx(FormControlLabel, {\n    control: __jsx(Switch, {\n      checked: dense,\n      onChange: handleChangeDense,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }),\n    label: \"Dense padding\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 378\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/StephenReiser/Desktop/SteveProject/dfs-results/components/NewTable.js"],"names":["React","PropTypes","clsx","lighten","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","FormControlLabel","Switch","DeleteIcon","FilterListIcon","createData","name","calories","fat","carbs","protein","rows","headCells","id","numeric","disablePadding","label","descendingComparator","a","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","EnhancedTableHead","props","classes","onSelectAllClick","numSelected","rowCount","onRequestSort","createSortHandler","property","event","headCell","visuallyHidden","propTypes","object","isRequired","number","func","oneOf","string","useToolbarStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","title","flex","EnhancedTableToolbar","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","padding","position","top","EnhancedTable","setOrder","useState","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","handleRequestSort","isAsc","handleSelectAllClick","target","checked","newSelecteds","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","value","handleChangeDense","isSelected","emptyRows","Math","min","row","isItemSelected","labelId"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nfunction createData(name, calories, fat, carbs, protein) {\n  return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n  createData('Cupcake', 305, 3.7, 67, 4.3),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\n\nconst headCells = [\n    { \n        id: 'Sport', numeric: false, disablePadding: true, label: 'Sport' },\n    { \n        id: 'Game_Type', numeric: false, disablePadding: false, label: 'Game_Type' },\n    { \n        id: 'Entry_Key', numeric: true, disablePadding: false, label: 'Entry_Key' },\n    { \n        id: 'Entry', numeric: false, disablePadding: false, label: 'Entry' },\n    { \n        id: 'Contest_Key', numeric: false, disablePadding: false, label: 'Contest_Key' },\n    { \n        id: 'Contest_Date_EST', numeric: false, disablePadding: false, label: 'Contest_Date_EST' },\n    { \n        id: 'Place', numeric: true, disablePadding: false, label: 'Place' },\n    { \n        id: 'Points', numeric: true, disablePadding: false, label: 'Points' },\n    { \n        id: 'Winnings_Non_Ticket', numeric: true, disablePadding: false, label: 'Winnings_Non_Ticket' },\n    { \n        id: 'Winnings_Ticket', numeric: true, disablePadding: false, label: 'Winnings_Ticket' },\n    { \n        id: 'Contest_Entries', numeric: true, disablePadding: false, label: 'Contest_Entries' },\n\n    { \n        id: 'Entry_Fee', numeric: true, disablePadding: false, label: 'Entry_Fee' },\n    { \n        id: 'Prize_Pool', numeric: true, disablePadding: false, label: 'Prize_Pool' },\n    { \n        id: 'Places_Paid', numeric: true, disablePadding: false, label: 'Places_Paid' }, \n    \n    \n    ]\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\n\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map(headCell => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = props => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = event => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map(n => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = event => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = name => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.calories}</TableCell>\n                      <TableCell align=\"right\">{row.fat}</TableCell>\n                      <TableCell align=\"right\">{row.carbs}</TableCell>\n                      <TableCell align=\"right\">{row.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}