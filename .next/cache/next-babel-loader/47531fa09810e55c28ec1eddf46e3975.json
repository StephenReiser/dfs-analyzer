{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/StephenReiser/Desktop/SteveProject/dfs-results/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { CSVReader } from 'react-papaparse';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleReadCSV\", function (data) {\n      console.log(data);\n\n      _this.setState({\n        myData: data\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleOnError\", function (err, file, inputElem, reason) {\n      console.log(err);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleImportOffer\", function () {\n      _this.fileInput.current.click();\n\n      _assertThisInitialized(_this);\n    });\n\n    _this.state = {\n      myData: {}\n    };\n    _this.fileInput = React.createRef();\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(CSVReader, {\n        onFileLoaded: this.handleReadCSV,\n        inputRef: this.fileInput,\n        style: {\n          display: 'none'\n        },\n        onError: this.handleOnError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        onClick: this.handleImportOffer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Import\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/StephenReiser/Desktop/SteveProject/dfs-results/pages/index.js"],"names":["React","Component","CSVReader","App","props","data","console","log","setState","myData","err","file","inputElem","reason","fileInput","current","click","state","createRef","handleReadCSV","display","handleOnError","handleImportOffer"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,SAAT,QAA0B,iBAA1B;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;;AADiB,oEAUH,UAACC,IAAD,EAAU;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAKG,QAAL,CAAc;AAACC,QAAAA,MAAM,EAAEJ;AAAT,OAAd;AACD,KAbkB;;AAAA,oEAeH,UAACK,GAAD,EAAMC,IAAN,EAAYC,SAAZ,EAAuBC,MAAvB,EAAkC;AAChDP,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,KAjBkB;;AAAA,wEAmBC,YAAM;AACxB,YAAKI,SAAL,CAAeC,OAAf,CAAuBC,KAAvB;;AACA;AACD,KAtBkB;;AAEjB,UAAKC,KAAL,GAAa;AACXR,MAAAA,MAAM,EAAE;AADG,KAAb;AAKA,UAAKK,SAAL,GAAiBd,KAAK,CAACkB,SAAN,EAAjB;AAPiB;AAQlB;;;;6BAgBQ;AACP,aACE,4BACE,MAAC,SAAD;AACE,QAAA,YAAY,EAAE,KAAKC,aADrB;AAEE,QAAA,QAAQ,EAAE,KAAKL,SAFjB;AAGE,QAAA,KAAK,EAAE;AAACM,UAAAA,OAAO,EAAE;AAAV,SAHT;AAIE,QAAA,OAAO,EAAE,KAAKC,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOE;AAAQ,QAAA,OAAO,EAAE,KAAKC,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CADF;AAWD;;;;EArCerB,S;;AAwClB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react'\n \nimport { CSVReader } from 'react-papaparse'\n \nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      myData: {\n        \n      }\n    }\n    this.fileInput = React.createRef()\n  }\n \n  handleReadCSV = (data) => {\n    console.log(data)\n    this.setState({myData: data})\n  }\n \n  handleOnError = (err, file, inputElem, reason) => {\n    console.log(err)\n  }\n \n  handleImportOffer = () => {\n    this.fileInput.current.click()\n    this\n  }\n \n  render() {\n    return (\n      <>\n        <CSVReader\n          onFileLoaded={this.handleReadCSV}\n          inputRef={this.fileInput}\n          style={{display: 'none'}}\n          onError={this.handleOnError}\n        />\n        <button onClick={this.handleImportOffer}>Import</button>\n      </>\n    )\n  }\n}\n \nexport default App"]},"metadata":{},"sourceType":"module"}